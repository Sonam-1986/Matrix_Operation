# -*- coding: utf-8 -*-
"""Matrix Operation

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pw4yBNowzWb98NcRdzrkdA0z8_qVRxVF
"""

import numpy as np

def input_matrix(name="Matrix"):
    print(f"\nEnter dimensions of {name} (rows cols):", end=" ")
    rows, cols = map(int, input().strip().split())
    print(f"Enter the elements of {name} row by row, separated by spaces:")
    entries = []
    for i in range(rows):
        row = list(map(float, input(f"Row {i+1}: ").strip().split()))
        if len(row) != cols:
            print("Invalid number of columns. Please re-enter this row.")
            return input_matrix(name)
        entries.extend(row)
    matrix = np.array(entries).reshape(rows, cols)
    return matrix

def print_matrix(mat, name="Result"):
    print(f"\n{name}:")
    print(mat)

def main():
    print("=== Matrix Operations Tool ===")
    A = input_matrix("Matrix A")
    B = input_matrix("Matrix B")
    while True:
        print("\nSelect an operation:")
        print("1. Add (A + B)")
        print("2. Subtract (A - B)")
        print("3. Multiply (A x B)")
        print("4. Transpose A")
        print("5. Transpose B")
        print("6. Determinant of A")
        print("7. Determinant of B")
        print("8. Exit")
        choice = input("Enter your choice (1-8): ").strip()
        if choice == '1':
            if A.shape == B.shape:
                print_matrix(A + B, "A + B")
            else:
                print("Addition not possible: Matrices have different shapes.")
        elif choice == '2':
            if A.shape == B.shape:
                print_matrix(A - B, "A - B")
            else:
                print("Subtraction not possible: Matrices have different shapes.")
        elif choice == '3':
            if A.shape[1] == B.shape[0]:
                print_matrix(np.dot(A, B), "A x B")
            else:
                print("Multiplication not possible: Columns of A must equal rows of B.")
        elif choice == '4':
            print_matrix(A.T, "Transpose of A")
        elif choice == '5':
            print_matrix(B.T, "Transpose of B")
        elif choice == '6':
            if A.shape[0] == A.shape[1]:
                print(f"\nDeterminant of A: {np.linalg.det(A):.4f}")
            else:
                print("Determinant not defined for non-square matrices (A).")
        elif choice == '7':
            if B.shape[0] == B.shape[1]:
                print(f"\nDeterminant of B: {np.linalg.det(B):.4f}")
            else:
                print("Determinant not defined for non-square matrices (B).")
        elif choice == '8':
            print("Exiting Matrix Operations Tool.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()